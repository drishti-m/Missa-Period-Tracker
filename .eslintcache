[{"/home/drishti/Desktop/period_tracker/src/index.js":"1","/home/drishti/Desktop/period_tracker/src/App.js":"2","/home/drishti/Desktop/period_tracker/src/reportWebVitals.js":"3","/home/drishti/Desktop/period_tracker/src/components/AboutUsComponent.jsx":"4","/home/drishti/Desktop/period_tracker/src/components/Dashboard.jsx":"5","/home/drishti/Desktop/period_tracker/src/components/Nav.jsx":"6","/home/drishti/Desktop/period_tracker/src/components/Home.jsx":"7","/home/drishti/Desktop/period_tracker/src/components/SignUpComponent.jsx":"8","/home/drishti/Desktop/period_tracker/src/components/LoginComponent.jsx":"9","/home/drishti/Desktop/period_tracker/src/components/Calendar.jsx":"10","/home/drishti/Desktop/period_tracker/src/components/Symptoms.jsx":"11","/home/drishti/Desktop/period_tracker/src/components/Blog.jsx":"12","/home/drishti/Desktop/period_tracker/src/components/Settings.jsx":"13"},{"size":554,"mtime":1609679302507,"results":"14","hashOfConfig":"15"},{"size":1253,"mtime":1609946536551,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609584134690,"results":"17","hashOfConfig":"15"},{"size":276,"mtime":1609713938970,"results":"18","hashOfConfig":"15"},{"size":826,"mtime":1609881959949,"results":"19","hashOfConfig":"15"},{"size":3900,"mtime":1609889321997,"results":"20","hashOfConfig":"15"},{"size":3410,"mtime":1609930262902,"results":"21","hashOfConfig":"15"},{"size":4755,"mtime":1609713961918,"results":"22","hashOfConfig":"15"},{"size":1023,"mtime":1609714525930,"results":"23","hashOfConfig":"15"},{"size":3458,"mtime":1609950531671,"results":"24","hashOfConfig":"15"},{"size":278,"mtime":1609713968890,"results":"25","hashOfConfig":"15"},{"size":262,"mtime":1609713943934,"results":"26","hashOfConfig":"15"},{"size":278,"mtime":1609713958158,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jc9z5u",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/drishti/Desktop/period_tracker/src/index.js",[],["57","58"],"/home/drishti/Desktop/period_tracker/src/App.js",[],"/home/drishti/Desktop/period_tracker/src/reportWebVitals.js",[],"/home/drishti/Desktop/period_tracker/src/components/AboutUsComponent.jsx",[],"/home/drishti/Desktop/period_tracker/src/components/Dashboard.jsx",[],"/home/drishti/Desktop/period_tracker/src/components/Nav.jsx",[],"/home/drishti/Desktop/period_tracker/src/components/Home.jsx",[],"/home/drishti/Desktop/period_tracker/src/components/SignUpComponent.jsx",["59"],"import './Nav.css';\nimport React, { Component } from 'react';\n//import { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\n\nclass SignUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { name: \"\", username: \"\", email_id: \"\", password: \"\", confirm_pw: \"\", matchingPassword: true, valid_username: true, entered_name: true, entered_email: true, entered_pw: true, entered_matching_pw: true };\n\n    }\n    check_user_name(value) {\n        //TO-DO: call API and check if the entry exists\n        if (value.length > 5) {\n\n            this.setState({ valid_username: true, username: value });\n        }\n        else { this.setState({ valid_username: false, username: value }); }\n        return;\n    }\n    check_password(confirm_password) {\n        this.setState({ confirm_pw: confirm_password })\n        if (this.state.password === confirm_password) {\n            this.setState({ matchingPassword: true, entered_matching_pw: true });\n        }\n        else {\n            this.setState({ matchingPassword: false, entered_matching_pw: true });\n        }\n\n\n        return;\n    }\n    check_submission(e) {\n        e.preventDefault();\n        if (this.state.name === \"\") {\n            this.setState({ entered_name: false });\n        }\n        if (this.state.username === \"\") {\n            this.setState({ valid_username: false });\n        }\n        if (this.state.email_id === \"\") {\n            this.setState({ entered_email: false });\n        }\n        if (this.state.password === \"\") {\n            this.setState({ entered_pw: false });\n        }\n        if (this.state.confirm_pw === \"\") {\n            this.setState({ entered_matching_pw: false });\n        }\n\n        if (this.state.entered_email === true && this.state.entered_name === true &&\n            this.state.entered_pw === true && this.state.entered_matching_pw === true &&\n            this.state.valid_username === true && this.state.matchingPassword === true) {\n\n            // TO-DO: add to database through API\n\n            this.props.history.push(\"/dashboard\");\n        }\n        return;\n\n    }\n\n    render() {\n        return (\n            < form className=\"login\" >\n\n\n                <h3> Sign Up </h3>\n                <div className=\"form-group\">\n                    <label> Name </label>\n                    <input type=\"name\" className=\"form-control\" placeholder=\"Your Full Name\" onChange={(e) => this.setState({ name: e.target.value, entered_name: true })} />\n                </div>\n                <div className=\"form-group\">\n                    <label> User Name </label>\n                    <input type=\"name\" className=\"form-control\" placeholder=\"Your User Name (should be unique)\" onChange={(e) => this.check_user_name(e.target.value)} />\n                    {this.state.valid_username ? <p></p> : <p> Username already exists! Please try another one.</p>}\n                </div>\n                <div className=\"form-group\">\n                    <label> Email Address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={(e) => this.setState({ email_id: e.target.value, entered_email: true })} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label> Create Password </label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={(e) => this.setState({ password: e.target.value, entered_pw: true })} />\n\n                </div>\n\n                <div className=\"form-group\">\n                    <label> Confirm Password </label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Confirm your password\" onChange={(e) => this.check_password(e.target.value)} />\n                    {!this.state.matchingPassword ? <p>password does not match!</p> : <p></p>}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={(e) => this.check_submission(e)}> Submit </button>\n                { this.state.entered_name === false ? <p> Name field blank not allowed! </p> : <p></p>}\n                { this.state.entered_email === false ? <p> Email field blank not allowed! </p> : <p></p>}\n                { this.state.valid_username === false ? <p> Invalid username not allowed! </p> : <p></p>}\n                { this.state.entered_pw === false ? <p> Password blank not allowed!</p> : <p></p>}\n                { this.state.entered_matching_pw === false ? <p> Matching password blank not allowed! </p> : <p></p>}\n\n\n                <p className=\"forgot-password-text-right\" >\n                    Forgot <a href=\"#\"> password?</a>\n                </p>\n\n            </form >\n        );\n    }\n}\n\n\nexport default SignUp;\n","/home/drishti/Desktop/period_tracker/src/components/LoginComponent.jsx",["60"],"import React, { Component } from 'react';\nimport './Login.css';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = { email_id: \"\", password: \"\" };\n\n    }\n\n\n    render() {\n        return (\n\n            <form className=\"login\" >\n                <h3> Log In </h3>\n                <div className=\"form-group\">\n                    <label> Email Address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label> Password </label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\"> Submit </button>\n                <p className=\"forgot-password-text-right\">\n                    Forgot <a href=\"#\"> password?</a>\n                </p>\n\n            </form>\n\n        );\n    }\n}\n\n\nexport default Login;","/home/drishti/Desktop/period_tracker/src/components/Calendar.jsx",["61"],"/home/drishti/Desktop/period_tracker/src/components/Symptoms.jsx",[],"/home/drishti/Desktop/period_tracker/src/components/Blog.jsx",[],"/home/drishti/Desktop/period_tracker/src/components/Settings.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":104,"column":28,"nodeType":"68","endLine":104,"endColumn":40},{"ruleId":"66","severity":1,"message":"67","line":31,"column":28,"nodeType":"68","endLine":31,"endColumn":40},{"ruleId":"69","severity":1,"message":"70","line":5,"column":20,"nodeType":"71","messageId":"72","endLine":5,"endColumn":29},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'DateRange' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]